//system setup

SELECT
    id,
    preconcde AS preconstruction_code,
    precondesc AS description,
    '10' AS status,
FROM preconstructionfile AS t_m_s_preconstruction_requirements;

SELECT 
    @row_counter := @row_counter + 1 AS id,
    partcde AS preoperational_code,
    partdesc AS 'description',
    '10' AS 'status'
FROM (
    SELECT partcde, partdesc
    FROM preoperationfile AS t_m_s_preconstruction_requirements
    GROUP BY partcde
) AS grouped,
(SELECT @row_counter := 0) AS id;

SELECT
    id,
    provicde AS provision_code,
    providesc AS description,
    '10' AS status,
FROM provisionsfile AS t_m_s_provisions;

SELECT
    id,
    metercde AS meter_code,
    meternum AS meter_no,
    multiplier AS multiplier,
    CASE
        WHEN meterctype = 'CHILLED WATER' THEN 'CHILLED-WATER'
        WHEN meterctype = 'ELECTRICITY - HYPO' THEN 'ELECTRICITY-HYPO'
        WHEN meterctype
    END AS `charge_type`
FROM  AS ;

//main module

// tenant profile

//problem - multiple turnoverfile
SELECT
    t_m_s_tenant_profiles.id,
    t_m_s_tenant_profiles.termsofleasecde AS awardnotice_no,
    t_m_s_tenant_profiles.turnoverdte AS turnover_date,
    t_m_s_tenant_profiles.modeofpayment AS payment_type,
    t_m_s_tenant_profiles.commencedte AS opening_date,
    tof.turnoverremarks AS remarks,
    tof.inspected AS inspected_by,
    tof.noted AS noted_by,
    tof.recieved AS conformed_by
FROM ingressfile AS t_m_s_tenant_profiles
JOIN turnoverfile tof ON t_m_s_tenant_profiles.ingresscde = tof.referencecde;

SELECT
	t_m_s_tenant_profile_x_meters.id,
	t_m_s_tenant_profile_x_meters.metercde AS meter_code,
	t_m_s_tenant_profile_x_meters.multiplier AS multiplier,
	t_m_s_tenant_profile_x_meters.remarks AS remarks,
	t_m_s_tenant_profile_x_meters.min AS beginning_reading,
	tof.termsofleasecde AS awardnotice_no,
	mf.id AS meter_id
FROM metertagfile AS t_m_s_tenant_profile_x_meters
LEFT JOIN turnoverfile tof ON t_m_s_tenant_profile_x_meters.turnovercde = tof.turnovercde
LEFT JOIN meterfile mf ON t_m_s_tenant_profile_x_meters.meternum = mf.meternum;

SELECT 'ATP' AS TYPE, atpnum AS permit_no,
	dte_expired AS expiration_date,
	ingress.termsofleasecde AS awardnotice_no,
	'10' AS 'status'
FROM ingressotherfile AS t_m_s_tenant_profile_x_permits
LEFT JOIN ingressfile ingress ON t_m_s_tenant_profile_x_permits.ingresscde = ingress.ingresscde
WHERE atpnum IS NOT NULL
  AND TRIM(atpnum) <> ''
  AND UPPER(TRIM(atpnum)) NOT IN ('N/A', 'NA', 'NONE', 'NULL')

UNION ALL

SELECT 'POS / CRM' AS TYPE, posnum AS permit_no,
	dte_expired AS expiration_date,
	ingress.termsofleasecde AS awardnotice_no,
	'10' AS 'status'
FROM ingressotherfile AS t_m_s_tenant_profile_x_permits
LEFT JOIN ingressfile ingress ON t_m_s_tenant_profile_x_permits.ingresscde = ingress.ingresscde
WHERE posnum IS NOT NULL
  AND TRIM(posnum) <> ''
  AND UPPER(TRIM(posnum)) NOT IN ('N/A', 'NA', 'NONE', 'NULL');

SELECT
	precon.id AS precon_id,
	t_m_s_tenant_profile_x_pre_con.preconcde AS precon_code,
	ingress.termsofleasecde AS awardnotice_no,
	'10' AS 'status'
FROM `constructionfile` AS t_m_s_tenant_profile_x_pre_con
LEFT JOIN `preconstructionfile` precon ON t_m_s_tenant_profile_x_pre_con.preconcde = precon.preconcde
LEFT JOIN ingressfile ingress ON t_m_s_tenant_profile_x_pre_con.ingresscde = ingress.ingresscde;

SELECT
	preop.id AS preop_id,
	t_m_s_tenant_profile_x_pre_op.partcde AS preop_code,
	ingress.termsofleasecde AS awardnotice_no,
	'10' AS 'status'
FROM `preoperationfile` AS t_m_s_tenant_profile_x_pre_op
LEFT JOIN `particularsfile` preop ON t_m_s_tenant_profile_x_pre_op.partcde = preop.partcde
LEFT JOIN ingressfile ingress ON t_m_s_tenant_profile_x_pre_op.ingresscde = ingress.ingresscde;

SELECT
	provi.id AS provision_id,
	t_m_s_tenant_profile_x_provisions.provicde AS provision_code,
	ingress.termsofleasecde AS awardnotice_no,
	'10' AS 'status'
FROM `turnoverformfile` AS t_m_s_tenant_profile_x_provisions
LEFT JOIN `provisionsfile` provi ON t_m_s_tenant_profile_x_provisions.provicde = provi.provicde
LEFT JOIN ingressfile ingress ON t_m_s_tenant_profile_x_provisions.ingresscde = ingress.ingresscde

Select 
    id,
    otherservicecde AS sc_no,
    chargescde AS service,
    osdtefr AS date_from,
    osdteto AS date_to,
    ostimefr AS time_from,
    ostimeto AS time_to,
    rateperunit AS rate,
    quantity AS qty,
    descofworkrpr AS remarks,
    ostotal AS total,
FROM operationadjustmentfile AS t_m_s_service_charges_x_records;


SELECT
    id,
    adjustmentcde AS adjustment_no,
    termsofleasecde AS awardnotice_no,
    Starting Month Year Format AS billing_period,
    CASE
        WHEN posted = 1 THEN 10
        WHEN posted = 0 THEN 20
    END AS 'status'
    postdte AS date,
FROM operationadjustmentfile AS t_m_s_operation_adjustments;

SELECT
    id,
    adjustmentcde AS adjustment_no,
    termsofleasecde AS awardnotice_no,
FROM operationadjustmentfile AS t_m_s_operation_adjustment_x_meters;

SELECT
    id,
    adjustmentcde AS adjustment_no,
    termsofleasecde AS awardnotice_no,
    soano AS sc_no,
FROM operationadjustmentfile AS t_m_s_operation_adjustment_x_service_charges;

SELECT
    id,
    meterctype AS charge_type,
    postdte AS posted_at,
    billperiodfr AS covered_from,
    billperiodto AS covered_to,
    AS ,
    AS ,
    CASE
    END AS 'status'
FROM meterreadingfile AS t_m_s_meter_readings;

SELECT
    id,
    preconcde AS preconstruction_code,
    precondesc AS description,
    '10' AS status,
    
FROM preconstructionfile AS t_m_s_preconstruction_requirements

